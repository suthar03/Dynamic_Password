/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dynamics;

import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Suthar
 */
public class Dy extends javax.swing.JFrame {
String Add="D:/DyPass";
int sec,min,hr,day,dt,month,year;
    /**
     * Creates new form Dy
     */
    public Dy() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pass = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        usrid = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 255, 51));

        pass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passKeyPressed(evt);
            }
        });

        jLabel1.setText("Enter Password :");

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("User Login");

        jLabel3.setText("sign up?");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setText("User ID:");

        usrid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usridKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usrid, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138)
                        .addComponent(submit)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(5, 5, 5)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit)
                    .addComponent(exit))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public String CodeValue(String str){
        String res;
        Calendar cal = new GregorianCalendar();
    day = cal.get(Calendar.DAY_OF_WEEK);
    dt = cal.get(Calendar.DAY_OF_MONTH);
        month = cal.get(Calendar.MONTH);
        year = cal.get(Calendar.YEAR);
        
        sec = cal.get(Calendar.SECOND);
        min = cal.get(Calendar.MINUTE);
        hr = cal.get(Calendar.HOUR);
         if(str.compareToIgnoreCase("MM")==0)
                        res=String.format("%02d", ++month);
                        else{
                            if(str.compareToIgnoreCase("yyyy")==0)
                                res=String.format("%04d", year);
                            else{
                                if(str.compareToIgnoreCase("dd")==0)
                                    res=String.format("%02d", dt);
                                else{
                                    if(str.compareToIgnoreCase("hr")==0)
                                        res=String.format("%02d", hr);
                                    else{
                                        if(str.compareToIgnoreCase("min")==0)
                                            res=String.format("%02d", min);
                                        else{
                                            if(str.compareToIgnoreCase("ss")==0)
                                                res=String.format("%02d", sec);
                                            else{
                                                if(str.compareToIgnoreCase("day")==0)
                                                res=DayStr(day);
                                            else{
                                                res=str;
                                            }
                                            }
                                        }
                                    }
                                }
                            }
                        }
        return res;
    }
    public String StringValue(String form){
        String res="",shortcd="";
       for(int i=0;i<form.length();++i){
        if(form.charAt(i)=='<'||form.charAt(i)=='>'){
            if(i!=0){
                //Go for codevalue
                res+=CodeValue(shortcd);
                shortcd="";
            }
            
        }else{
            shortcd+=form.charAt(i);
        }   
       }
       res+=CodeValue(shortcd);
       //System.out.println("String valued::"+res);
        return res;
    }
    public String  passValue(String intstr){
        //System.out.println("String Int Value passed:"+intstr);
        String res="",curr="";int br=-1;
      for(int i=0;i<intstr.length();++i){
          if(br==0&&i!=0){
              //eval miust be calcutated
              System.out.println("Going for eval::"+curr);
              res+=String.valueOf(eval(curr));
              curr="";
                      br=-1;--i; continue;
          }else{
              if(intstr.charAt(i)=='['){ br=1;continue;}
              else{
                  if(intstr.charAt(i)==']') {br=0; continue;}
              }
          if(br==-1){
          res+=intstr.charAt(i);
          continue;
          }
          
          }
          curr+=intstr.charAt(i);
      }  
      if(br==0){
              //eval miust be calcutated
              System.out.println("Going for eval::"+curr);
              res+=String.valueOf(eval(curr));
              curr="";
                      br=-1;
          }else{
          res=res+curr;
      }
        return res;
    }
    public  int eval( String str) {
    return new Object() {
        int pos = -1, ch;

        void nextChar() {
            ch = (++pos < str.length()) ? str.charAt(pos) : -1;
        }

        boolean eat(int charToEat) {
            while (ch == ' ') nextChar();
            if (ch == charToEat) {
                nextChar();
                return true;
            }
            return false;
        }

        int parse() {
            nextChar();
            int x =  parseExpression();
            if (pos < str.length()) throw new RuntimeException("Unexpected: " + (char)ch);
            return x;
        }

        // Grammar:
        // expression = term | expression `+` term | expression `-` term
        // term = factor | term `*` factor | term `/` factor
        // factor = `+` factor | `-` factor | `(` expression `)`
        //        | number | functionName factor | factor `^` factor

        int parseExpression() {
            int x = parseTerm();
            for (;;) {
                if      (eat('+')) x += parseTerm(); // addition
                else if (eat('-')) x -= parseTerm(); // subtraction
                else return x;
            }
        }

        int parseTerm() {
            int x = parseFactor();
            for (;;) {
                if      (eat('*')) x *= parseFactor(); // multiplication
                else if (eat('/')) x /= parseFactor(); // division
                else return x;
            }
        }

        int parseFactor() {
            if (eat('+')) return parseFactor(); // unary plus
            if (eat('-')) return -parseFactor(); // unary minus

            int x;
            int startPos = this.pos;
            if (eat('(')) { // parentheses
                x = parseExpression();
                eat(')');
            } else if ((ch >= '0' && ch <= '9') || ch == '.') { // numbers
                while ((ch >= '0' && ch <= '9') || ch == '.') nextChar();
                x = Integer.parseInt(str.substring(startPos, this.pos));
            } else  {
                throw new RuntimeException("Unexpected: " + (char)ch);
            }

            if (eat('^')) x = (int) Math.pow(x, parseFactor()); // exponentiation

            return x;
        }
    }.parse();
}

public String DayStr(int i){
    String DDD="";
    switch(i){
        case 1: DDD="SUN"; break;
        case 2: DDD="MON"; break;
        case 3: DDD="TUE"; break;
        case 4: DDD="WED"; break;
        case 5: DDD="THU"; break;
        case 6: DDD="FRI"; break;
        case 7: DDD="SAT"; break;
            
    }
    return DDD;
}
    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        String passorg = "";
        File fl = new File(Add+"/"+usrid.getText()+"/profile.txt");
    if(fl.exists()){
        try {
        passorg = GetLine.mainn(Add+"/"+usrid.getText()+"/profile.txt", 2);
        System.out.println("passorg value "+passorg);
        System.out.println("String value "+StringValue(passorg));
            String passexptd=passValue(StringValue(passorg));
            String entpass=new String(pass.getPassword());
            if(entpass.equals(passexptd)){
                
                            JLabel label = new JLabel("Login Successful");
                        label.setFont(new Font("Arial", Font.BOLD, 18));
                        JOptionPane.showMessageDialog(null,label,"Successful",JOptionPane.INFORMATION_MESSAGE);
                        System.exit(1);
                      
                System.out.println("You have passed the all thing all you dynamic setted ::)");
            }else{
                System.out.println("Password in not correct !!");
                JLabel label = new JLabel("Password is incorrect !!!");
    label.setFont(new Font("Arial", Font.BOLD, 18));
    JOptionPane.showMessageDialog(this,label,"ERROR",JOptionPane.WARNING_MESSAGE);
            }
    } catch (IOException ex) {
        System.out.println("User not exist");
    }
    }else{
        System.out.println("User not exists");
    }
        
            
    }//GEN-LAST:event_submitActionPerformed

    private void passKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            submit.requestFocus();
        }
    }//GEN-LAST:event_passKeyPressed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(1);
    }//GEN-LAST:event_exitActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        new QuickReg().setVisible(true);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void usridKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usridKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            pass.requestFocus();
    }//GEN-LAST:event_usridKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField pass;
    private javax.swing.JButton submit;
    private javax.swing.JTextField usrid;
    // End of variables declaration//GEN-END:variables
}
